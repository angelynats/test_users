{"version":3,"sources":["../node_modules/raf/index.js","../../src/performance-now.coffee","../node_modules/react-time-ago/node_modules/memoize-one/dist/memoize-one.esm.js","../../../source/helpers/locale.js","../../../source/helpers/cache.js","../../../source/helpers/getVerboseDateFormatter.js","../../../source/helpers/date.js","../../../source/helpers/getTimeAgo.js","../../source/Updater.js","../../../source/helpers/binarySearch.js","../../source/Time.js","../../source/PropTypes.js","../../source/ReactTimeAgo.js"],"names":["now","require","root","window","global","vendors","suffix","raf","caf","i","length","last","id","queue","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","module","exports","fn","call","cancel","apply","arguments","polyfill","object","requestAnimationFrame","cancelAnimationFrame","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","first","second","intlDateTimeFormatSupported","Intl","Cache","cache","this","keys","key","lastKey","INTL_DATE_TIME_FORMAT_SUPPORTED","FALLBACK_VERBOSE_DATE_FORMATTER","date","memoize","resultFn","isEqual","memoized","newArgs","_i","lastThis","lastArgs","lastResult","clear","locales","format","locale","localesFingerprint","resolvedLocales","intlDateTimeFormatSupportedLocale","resolveLocale","formatFingerprint","JSON","formatter","String","isDate","isMockedDate","TimeAgoCache","instances","add","wasIdle","stop","remove","forceUpdate","updateInstance","tick","Date","instance","scheduleNextTick","start","nextUpdateTime","_updateInstance","array","min","guess","result","test","binarySearch","findTargetIndex","Time","verboseDate","tooltip","children","rest","isoString","ref","dateTime","title","React","PropTypes","isRequired","step","minTime","formatAs","string","func","style","steps","arrayOf","labels","oneOfType","ReactTimeAgo","future","timeStyle","minTimeLeft","Component","component","container","wrapperComponent","wrapperProps","formatVerboseDate","verboseDateFormat","updateInterval","nowProperty","timeOffset","preferredLocales","TimeAgo","timeAgo","getTimeAgo","formatDate","stopUpdates","maxNow","getTimeToNextUpdate","formattedDate","timeToNextUpdate","formatDateRef","useRef","useMemo","_formattedDate","_nextUpdateTime","useState","setFormattedDate","updater","useEffect","Updater","getNextValue","setValue","verboseDateFormatter","getVerboseDateFormatter","WrapperComponent","threshold","interval","weekday","day","month","year","hour","minute","INFINITY"],"mappings":"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","file":"static/js/8.3132c4bb.chunk.js","sourcesContent":["var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n","/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tcache = {}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}","import memoize from 'memoize-one'\r\n\r\nimport {\r\n\tintlDateTimeFormatSupported,\r\n\tintlDateTimeFormatSupportedLocale\r\n} from './locale'\r\n\r\nimport Cache from './cache'\r\n\r\nconst cache = new Cache()\r\n\r\nconst INTL_DATE_TIME_FORMAT_SUPPORTED = intlDateTimeFormatSupported()\r\nconst FALLBACK_VERBOSE_DATE_FORMATTER = date => date.toString()\r\n\r\n/**\r\n * Returns a verbose date formatter.\r\n * \r\n * @param {string} locale - Date formatting locale\r\n * @param {object} format - Output format\r\n * @param {string} format.day     - Day format\r\n * @param {string} format.month   - Month format\r\n * @param {string} format.year    - Year format\r\n * @param {string} format.weekday - Weekday format\r\n * @param {string} format.hour    - Hour format\r\n * @param {string} format.minute  - Minute format\r\n * @param {string} format.second  - Second format\r\n *\r\n * @returns {Function} `(date) -> string`.\r\n */\r\nfunction getVerboseDateFormatter(locales, format) {\r\n\t// Fall back to `date.toString()` for old web browsers.\r\n\t// https://caniuse.com/#search=intl\r\n\tif (!INTL_DATE_TIME_FORMAT_SUPPORTED) {\r\n\t\treturn FALLBACK_VERBOSE_DATE_FORMATTER\r\n\t}\r\n\r\n\t// If none of the `locales` are supported\r\n\t// a default system locale will be used.\r\n\tconst locale = resolveLocale(locales)\r\n\r\n\t// `Intl.DateTimeFormat` format caching key.\r\n\t// E.g. `\"{\"day\":\"numeric\",\"month\":\"short\",...}\"`.\r\n\t// Didn't benchmark what's faster:\r\n\t// creating a new `Intl.DateTimeFormat` instance\r\n\t// or stringifying a small JSON `format`.\r\n\t// Perhaps strigifying JSON `format` is faster.\r\n\tconst formatFingerprint = JSON.stringify(format)\r\n\r\n\t// Get `Intl.DateTimeFormat` instance for these `locale` and `format`.\r\n\t// (`locale` can be `undefined`, hence the `String(locale)` conversion)\r\n\tconst formatter = cache.get(String(locale), formatFingerprint) ||\r\n\t\tcache.put(String(locale), formatFingerprint, new Intl.DateTimeFormat(locale, format))\r\n\r\n\t// Return date formatter\r\n\treturn date => formatter.format(date)\r\n}\r\n\r\n// Even though `getVerboseDateFormatter()` function is called inside a\r\n// `useMemo()` hook, it's still invoked every time for different \r\n// `<ReactTimeAgo/>` elements on a page. There could be a lot of such\r\n// `<ReactTimeAgo/>` elements on a page. And `useMemo()` wouldn't speed up\r\n// the initial render. To work around that, simple argument-based memoization\r\n// is used.\r\nexport default memoize(getVerboseDateFormatter)\r\n\r\n// Caching locale resolving for optimizing pages \r\n// with a lot of `<ReactTimeAgo/>` elements (say, 100 or more).\r\n// `Intl.DateTimeFormat.supportedLocalesOf(locales)` is not instantaneous.\r\n// For example, it could be 25 milliseconds for 200 calls.\r\nconst resolvedLocales = {}\r\n\r\n/**\r\n * Resolves a list of possible locales to a single (\"best fit\") supported locale.\r\n * @param  {string[]} locales\r\n * @return {string}\r\n */\r\nfunction resolveLocale(locales) {\r\n\tconst localesFingerprint = locales.toString()\r\n\tif (resolvedLocales[localesFingerprint]) {\r\n\t\treturn resolvedLocales[localesFingerprint] \r\n\t}\r\n\treturn resolvedLocales[localesFingerprint] = intlDateTimeFormatSupportedLocale(locales)\r\n}","/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn isDate(value) ? value : new Date(value)\r\n}\r\n\r\n/**\r\n * Converts value to a timestamp.\r\n * @param {(number|Date)} value\r\n * @return {number}\r\n */\r\nexport function getTime(value) {\r\n\treturn isDate(value) ? value.getTime() : value\r\n}\r\n\r\nfunction isDate(object) {\r\n\treturn object instanceof Date || isMockedDate(object)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nexport function isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}","import TimeAgo from 'javascript-time-ago'\r\n\r\nimport Cache from './cache'\r\n\r\nconst TimeAgoCache = new Cache()\r\nexport default function getTimeAgo(preferredLocales, { polyfill }) {\r\n\t// `TimeAgo` instance creation is (hypothetically) assumed\r\n\t// a lengthy operation so the instances are cached and reused.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/1\r\n\tconst key = String(preferredLocales) + ':' + String(polyfill)\r\n\treturn TimeAgoCache.get(key) ||\r\n\t\tTimeAgoCache.put(key, new TimeAgo(preferredLocales, { polyfill }))\r\n}","// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}","// \"Binary\" search in a sorted array.\r\nexport default function (array, test) {\r\n\tif (array.length === 0) {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tlet min = 0\r\n\tlet max = array.length - 1\r\n\tlet guess\r\n\r\n\twhile (min <= max) {\r\n\t\tguess = Math.floor((max + min) / 2)\r\n\r\n\t\tconst result = test(array[guess])\r\n\t\tif (result === 0) {\r\n\t\t\treturn guess\r\n\t\t}\r\n\t\telse if (result < 0) {\r\n\t\t\tmin = guess + 1\r\n\t\t\tif (min > max) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmax = guess - 1\r\n\t\t\tif (max < min) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// return -1\r\n\t// return min\r\n}","import React, { useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Time({\r\n\tdate,\r\n\tverboseDate,\r\n\ttooltip,\r\n\tchildren,\r\n\t...rest\r\n}, ref) {\r\n\tconst isoString = useMemo(() => date.toISOString(), [date])\r\n\treturn (\r\n\t\t<time\r\n\t\t\tref={ref}\r\n\t\t\t{...rest}\r\n\t\t\tdateTime={isoString}\r\n\t\t\ttitle={tooltip ? verboseDate : undefined}>\r\n\t\t\t{children}\r\n\t\t</time>\r\n\t)\r\n}\r\n\r\n// https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\r\n//\r\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\r\n// and that component required `children` be `ref`-able.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\r\n// \r\n// That component seems to only be using that `ref-`ability to check whether \r\n// the `children` element qualifies for `:focus-visible` selector.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\r\n//\r\nTime = React.forwardRef(Time)\r\n\r\nTime.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n\tverboseDate: PropTypes.string,\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.string.isRequired\r\n}","import {\r\n\toneOfType,\r\n\tarrayOf,\r\n\tstring,\r\n\tnumber,\r\n\tshape,\r\n\tfunc\r\n} from 'prop-types'\r\n\r\n// The first step isn't required to define `minTime` or `test()`.\r\nconst step = oneOfType([\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformat: func.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformat: func.isRequired\r\n\t})\r\n])\r\n\r\n// Formatting style.\r\nexport const style = oneOfType([\r\n\t// Not using `oneOf()` here, because that way\r\n\t// this package wouldn't support some hypothetical\r\n\t// new styles added to `javascript-time-ago` in some future.\r\n\tstring,\r\n\tshape({\r\n\t\tsteps: arrayOf(step).isRequired,\r\n\t\tlabels: oneOfType([\r\n\t\t\tstring,\r\n\t\t\tarrayOf(string)\r\n\t\t]).isRequired,\r\n\t\tround: string\r\n\t})\r\n])","import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\nimport getVerboseDateFormatter from './helpers/getVerboseDateFormatter'\r\nimport { getDate } from './helpers/date'\r\nimport getTimeAgo from './helpers/getTimeAgo'\r\n\r\nimport Updater from './Updater'\r\nimport Time from './Time'\r\n\r\nimport { style as styleType } from './PropTypes'\r\n\r\nfunction ReactTimeAgo({\r\n\tdate,\r\n\tfuture,\r\n\ttimeStyle,\r\n\tround,\r\n\tminTimeLeft,\r\n\ttooltip,\r\n\tcomponent: Component,\r\n\t// `container` property name is deprecated, \r\n\t// use `wrapperComponent` property name instead.\r\n\tcontainer,\r\n\twrapperComponent,\r\n\twrapperProps,\r\n\tlocale,\r\n\tlocales,\r\n\tformatVerboseDate,\r\n\tverboseDateFormat,\r\n\tupdateInterval,\r\n\ttick,\r\n\tnow: nowProperty,\r\n\ttimeOffset,\r\n\tpolyfill,\r\n\t...rest\r\n}) {\r\n\t// Get the list of preferred locales.\r\n\tconst preferredLocales = useMemo(() => {\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// Add `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(TimeAgo.getDefaultLocale())\r\n\t}, [\r\n\t\tlocale,\r\n\t\tlocales\r\n\t])\r\n\r\n\t// Create `javascript-time-ago` formatter instance.\r\n\tconst timeAgo = useMemo(() => {\r\n\t\treturn getTimeAgo(preferredLocales, { polyfill })\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tpolyfill\r\n\t])\r\n\r\n\t// The date or timestamp that was passed.\r\n\t// Convert timestamp to `Date`.\r\n\tdate = useMemo(() => getDate(date), [date])\r\n\r\n\t// Formats the `date`.\r\n\tconst formatDate = useCallback(() => {\r\n\t\tlet now = (nowProperty || Date.now()) - timeOffset\r\n\t\tlet stopUpdates\r\n\t\tif (future) {\r\n\t\t\tif (now >= date.getTime()) {\r\n\t\t\t\tnow = date.getTime()\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (minTimeLeft !== undefined) {\r\n\t\t\tconst maxNow = date.getTime() - minTimeLeft * 1000\r\n\t\t\tif (now > maxNow) {\r\n\t\t\t\tnow = maxNow\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet [formattedDate, timeToNextUpdate] = timeAgo.format(date, timeStyle, {\r\n\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t})\r\n\t\tif (stopUpdates) {\r\n\t\t\ttimeToNextUpdate = INFINITY\r\n\t\t} else {\r\n\t\t\t// Legacy compatibility: there used to be an `updateInterval` property.\r\n\t\t\t// That was before `getTimeToNextUpdate` feature was introduced in `javascript-time-ago`.\r\n\t\t\t// A default interval of one minute is introduced because\r\n\t\t\t// `getTimeToNextUpdate` feature may theoretically return `undefined`.\r\n\t\t\ttimeToNextUpdate = updateInterval || timeToNextUpdate || 60 * 1000 // A minute by default.\r\n\t\t}\r\n\t\treturn [formattedDate, now + timeToNextUpdate]\r\n\t}, [\r\n\t\tdate,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tupdateInterval,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\ttimeAgo,\r\n\t\tnowProperty\r\n\t])\r\n\r\n\tconst formatDateRef = useRef()\r\n\tformatDateRef.current = formatDate\r\n\r\n\tconst [_formattedDate, _nextUpdateTime] = useMemo(formatDate, [])\r\n\tconst [formattedDate, setFormattedDate] = useState(_formattedDate)\r\n\r\n\tconst updater = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tick) {\r\n\t\t\tupdater.current = Updater.add({\r\n\t\t\t\tgetNextValue: () => formatDateRef.current(),\r\n\t\t\t\tsetValue: setFormattedDate,\r\n\t\t\t\tnextUpdateTime: _nextUpdateTime\r\n\t\t\t})\r\n\t\t\treturn () => updater.current.stop()\r\n\t\t}\r\n\t}, [tick])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (updater.current) {\r\n\t\t\tupdater.current.forceUpdate()\r\n\t\t} else {\r\n\t\t\tconst [formattedDate] = formatDate()\r\n\t\t\tsetFormattedDate(formattedDate)\r\n\t\t}\r\n\t}, [formatDate])\r\n\r\n\t// Create verbose date formatter for the tooltip text.\r\n\tconst verboseDateFormatter = useMemo(() => {\r\n\t\treturn getVerboseDateFormatter(\r\n\t\t\tpreferredLocales, \r\n\t\t\tverboseDateFormat\r\n\t\t)\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tverboseDateFormat\r\n\t])\r\n\r\n\t// Format verbose date for the tooltip.\r\n\tconst verboseDate = useMemo(() => {\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(date)\r\n\t\t}\r\n\t\treturn verboseDateFormatter(date)\r\n\t}, [\r\n\t\tdate,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormatter\r\n\t])\r\n\r\n\tconst result = (\r\n\t\t<Component\r\n\t\t\tdate={date}\r\n\t\t\tverboseDate={verboseDate}\r\n\t\t\ttooltip={tooltip}\r\n\t\t\t{...rest}>\r\n\t\t\t{formattedDate}\r\n\t\t</Component>\r\n\t)\r\n\r\n\tconst WrapperComponent = wrapperComponent || container\r\n\r\n\tif (WrapperComponent) {\r\n\t\treturn (\r\n\t\t\t<WrapperComponent\r\n\t\t\t\t{...wrapperProps}\r\n\t\t\t\tverboseDate={verboseDate}>\r\n\t\t\t\t{result}\r\n\t\t\t</WrapperComponent>\r\n\t\t)\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nReactTimeAgo.propTypes = {\r\n\t// The `date` or `timestamp`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate: PropTypes.oneOfType([\r\n\t\tPropTypes.instanceOf(Date),\r\n\t\tPropTypes.number\r\n\t]).isRequired,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale: PropTypes.string,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture: PropTypes.bool,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle: styleType,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround: PropTypes.string,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft: PropTypes.number,\r\n\r\n\t// A React component to render the relative time label.\r\n\t// Receives properties:\r\n\t// * date: Date — The date.\r\n\t// * verboseDate: string — Formatted verbose date.\r\n\t// * tooltip: boolean — The `tooltip` property of `<ReactTimeAgo/>` component.\r\n\t// * children: string — The relative time label.\r\n\t// * All \"unknown\" properties that have been passed to `<ReactTimeAgo/>` are passed through to this component.\r\n\tcomponent: PropTypes.elementType.isRequired,\r\n\r\n\t// Whether to use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\t// Is `true` by default.\r\n\t// Can be set to `false` to disable the native HTML `tooltip`.\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate: PropTypes.func,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat: PropTypes.object,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// Instead, consider using `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles.\r\n\tupdateInterval: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({\r\n\t\t\tthreshold: PropTypes.number,\r\n\t\t\tinterval: PropTypes.number.isRequired\r\n\t\t}))\r\n\t]),\r\n\r\n\t// (deprecated).\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns that off.\r\n\ttick: PropTypes.bool,\r\n\r\n\t// Allows setting a custom baseline for relative time measurement.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\tnow: PropTypes.number,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset: PropTypes.number,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\tpolyfill: PropTypes.bool,\r\n\r\n\t// (advanced)\r\n\t// A React Component to wrap the resulting `<time/>` React Element.\r\n\t// Receives `verboseDate` and `children` properties.\r\n\t// Also receives `wrapperProps`, if they're passed.\r\n\t// `verboseDate` can be used for displaying verbose date label\r\n\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t// See the \"Tooltip\" readme section for more info.\r\n\t// Another example could be having `wrapperComponent`\r\n\t// being rerendered every time the component refreshes itself.\r\n\twrapperComponent: PropTypes.elementType,\r\n\r\n\t// Custom `props` passed to `wrapperComponent`.\r\n\twrapperProps: PropTypes.object\r\n}\r\n\r\nReactTimeAgo.defaultProps = {\r\n\t// No preferred locales.\r\n\tlocales: [],\r\n\r\n\t// Use a `<time/>` tag by default.\r\n\tcomponent: Time,\r\n\r\n\t// Use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\ttooltip: true,\r\n\r\n\t// `Intl.DateTimeFormat` for verbose date.\r\n\t// Example: \"Thursday, December 20, 2012, 7:00:00 AM GMT+4\"\r\n\tverboseDateFormat: {\r\n\t\tweekday: 'long',\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'long',\r\n\t\tyear: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: '2-digit',\r\n\t\tsecond: '2-digit',\r\n\t\t// timeZoneName: 'short'\r\n\t},\r\n\r\n\t// Automatically refreshes itself.\r\n\ttick: true,\r\n\r\n\t// No time offset.\r\n\ttimeOffset: 0\r\n}\r\n\r\n// The component schedules a next refresh every time it renders.\r\n// There's no need to rerender this component unless its props change.\r\nReactTimeAgo = React.memo(ReactTimeAgo)\r\n\r\nexport default ReactTimeAgo\r\n\r\n// A thousand years is practically a metaphor for \"infinity\"\r\n// in the context of this component.\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nconst INFINITY = 1000 * YEAR"],"sourceRoot":""}